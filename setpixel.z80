            org $8000

VIDEO       equ $4000

start
            call setpixel

            ld a, 2
            ld (x), a
            call setpixel

            ld a, 5
            ld (x), a
            call setpixel

            ld a, 9
            ld (x), a
            call setpixel

            ld a, 14
            ld (x), a
            call setpixel

            ret

; set the pixel at (x, y)
; TODO: - Avoid redundant memory reads
;       - Keep register b and c untouched (don't break callers' loops)
setpixel:
            ld hl, VIDEO

            ; -- y-coordinate --

            ; 010BBSSS LLLCCCCC
            ; BBLL LSSS

            ld a, (y)           ; TODO: no need to do something if (y) == 0
            sra a
            sra a
            sra a
            ld b, %00011000
            and b               ; a = 000BB000
            add a, h
            ld h, a

            ld a, (y)
            sla a
            sla a
            ld b, %11000000
            and b               ; a = LLL00000
            add a, l
            ld l, a

            ld a, (y)
            ld b, %00000111
            and b               ; a = 00000SSS
            add a, h
            ld h, a

            ; -- x-coordinate --

            ; compute the character offset as x / 8
            ld a, (x)           ; TODO: no need to do something if (x) == 0
            sra a
            sra a
            sra a
            ld b, %00011111
            and b
            add a, l
            ld l, a

            ; compute the offset within the character as x mod 8
            ld a, (x)
            ld b, 7
            and b
            ld b, a             ; b = x mod 8

            inc b
            xor a               ; a = 0
            scf
.sploop:    rra                 ; TODO: use a LUT to speed this up
            djnz .sploop

            ; draw the pixel
            ld b, a
            ld a, (hl)
            or b
            ld (hl), a

            ret

x:          defb 0
y:          defb 170

end start

; vim: set ts=4 sw=4 expandtab:
